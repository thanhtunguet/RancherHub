services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: rancher-hub-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: rancher_hub
      POSTGRES_USER: rancher_hub
      POSTGRES_PASSWORD: rancher_hub_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - rancher-hub-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rancher_hub -d rancher_hub"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    image: thanhtunguet/rancher-hub-backend:latest
    container_name: rancher-hub-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_TYPE: postgres
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: rancher_hub
      DATABASE_USERNAME: rancher_hub
      DATABASE_PASSWORD: rancher_hub_password
      DATABASE_SSL: false
      DATABASE_SYNCHRONIZE: true
      FRONTEND_URL: http://localhost:8080
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - rancher-hub-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    image: thanhtunguet/rancher-hub-frontend:latest
    container_name: rancher-hub-frontend
    restart: unless-stopped
    networks:
      - rancher-hub-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:stable-alpine
    container_name: rancher-hub-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - rancher-hub-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local

networks:
  rancher-hub-network:
    driver: bridge
