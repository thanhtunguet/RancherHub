name: Release

on:
  push:
    tags: ["v*"]

env:
  REGISTRY: docker.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}-backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}-frontend

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.BACKEND_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.FRONTEND_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ## Release ${{ steps.version.outputs.VERSION }}

            ### Docker Images

            **Backend:**
            - `${{ env.REGISTRY }}/${{ github.actor }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}`
            - `${{ env.REGISTRY }}/${{ github.actor }}/${{ env.BACKEND_IMAGE_NAME }}:latest`

            **Frontend:**
            - `${{ env.REGISTRY }}/${{ github.actor }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}`
            - `${{ env.REGISTRY }}/${{ github.actor }}/${{ env.FRONTEND_IMAGE_NAME }}:latest`

            ### Usage

            ```bash
            # Backend
            docker run -p 3000:3000 ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.BACKEND_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}

            # Frontend
            docker run -p 80:80 ${{ env.REGISTRY }}/${{ github.actor }}/${{ env.FRONTEND_IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ```
